#QUESTION1
# Access population values from the dataset and store it in pop
pop <- murders$population
# Sort the object and save it in the same object 
pop <- sort(murders$population)
# Report the smallest population size 
pop[1]

#QUESTION2
# Access population from the dataset and store it in pop
pop <- murders$population
# Use the command order to find the vector of indexes that order pop and store in object ord
ord <- order(pop)
# Find the index number of the entry with the smallest population size
sort(ord)
ord[1]

#QUESTION3
#Find the index of the smallest value for variable total 
which.min(murders$total)
# Find the index of the smallest value for population
which.min(murders$population)

#QUESTION4
# Define the variable i to be the index of the smallest state
i <- which.min(murders$population)
# Define variable states to hold the states
states <- murders$state
# Use the index you just defined to find the state with the smallest population
 i_min <- which.min(murders$population)    # index with min number of pop
states[i_min]    # state name with min number of total pop

#QUESTION5
# Define a variable states to be the state names 
states <- (murders$state)
# Define a variable ranks to determine the population size ranks 
ranks <- rank(murders$population)
# Create a data frame my_df with the state name and its rank
my_df <- data.frame(name = states, rank = ranks)

#QUESTION6
# Define a variable states to be the state names from the murders data frame
states <- (murders$state)
# Define a variable ranks to determine the population size ranks 
ranks <- rank(murders$population)
# Define a variable ind to store the indexes needed to order the population values
ind <- order(murders$population)
# Create a data frame my_df with the state name and its rank and ordered from least populous to most 
my_df <- data.frame(name = states[ind], rank = ranks[ind])

#QUESTION7
# Use is.na to create a logical index ind that tells which entries are NA
ind <- is.na(na_example)
# Determine how many NA ind has using the sum function
sum(ind)

#QUESTION8

mean(na_examples[!ind])
